version: '3.8'

services:
  server:
    image: ${SERVER_HOST}
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./server:/usr/src/app:cached
      - /usr/src/app/node_modules
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    depends_on:
      - db
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
    networks:
      - backend-network  # Connect to custom network

  web:
    image: ${WEB_HOST}
    build:
      context: ./web
      dockerfile: Dockerfile
    volumes:
      - ./web:/usr/src/app:cached
      - /usr/src/app/node_modules
    ports:
      - "${WEB_PORT}:3000"
    depends_on:
      - server
    networks:
      - backend-network  # Connect to custom network

  db:
    image: ${DB_HOST}
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust  # Allow all connections without a password for development
    volumes:
      - db_data:/var/lib/DBql/data
    networks:
      - backend-network  # Connect to custom network

  nginx:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    volumes:
      - ./proxy/cert:/etc/nginx/certificates
    ports:
      - "${NGINX_HTTP_PORT}:${NGINX_HTTP_PORT}"
      - "${NGINX_HTTPS_PORT}:${NGINX_HTTPS_PORT}"
    depends_on:
      - server
      - web
    networks:
      - backend-network  # Connect to custom network

networks:
  backend-network:  # Define custom network
    driver: bridge

volumes:
  db_data:
