events {}

http {
    server {
        listen 80;
        server_name localhost;

        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # temp solution for local use of open web ui
    server {
        listen ${OLLAMA_WEB_UI_HOST};
        server_name localhost;

        # Serve /admin path to ollama-webui
        location / {
            proxy_pass http://${OLLAMA_WEB_UI_HOST}:${OLLAMA_WEB_UI_PORT};  # Assuming ollama-webui is running on localhost
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # SSL configuration
        ssl_certificate /etc/nginx/certificates/server.crt;
        ssl_certificate_key /etc/nginx/certificates/server.key;

        # Serve /graphql from the server
        location /graphql {
            proxy_pass http://${SERVER_HOST}:${SERVER_PORT};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve everything else from the web
        location / {
            proxy_pass http://${WEB_HOST}:${WEB_PORT};
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
